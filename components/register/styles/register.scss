@import "variables";

.modalRegister {
  max-width: 971px;
  width: 100% !important;
  margin: auto;
  padding: 20px;

  .ant-modal-close {
    position: absolute;
    left: 0px;
    width: max-content;
    margin: 13px;

    &:lang(ar) {
      right: 0px;
    }

    svg {
      color: #fff;
      font-size: 20px;
    }
  }

  .ant-modal-content {
    box-shadow: none;
    background: none !important;
  }

  .ant-modal-body {
    background: #fff;
    padding: 0px;
    min-height: 300px;
    border-radius: 20px;

    .handleInputIcon {
      .ant-input-affix-wrapper {
        direction: rtl;

        input {
          direction: ltr;
        }

        &:lang(ar) {
          direction: ltr;

          input {
            direction: rtl;
          }
        }

        svg {
          color: $c-f-s;
        }
      }
    }
    .ant-form-item-feedback-icon{
      margin-inline-start: 10px;
    }
  }

  .modalS1_form {
    background: #fff;
    padding: 20px;
    border-radius: 13px;
    height: 100%;

    .modalS1_header {
      text-align: center;
      margin-top: 90px;

      h2 {
        font-weight: 800;
        font-size: 22px;
        line-height: 33px;
        margin-top: 17px;
      }
    }

    form {
      margin-top: 40px;
      margin-bottom: 30px;

      .ButtonsS1 {
        button {
          height: 45px;
          min-width: 160px;
          margin-top: 29px;
        }
      }

      .forget {
        text-align: center;
        margin: auto;
        margin-top: 23px;
      }
    }
  }

  .modalS1_content2 {
    max-width: 430px;
    margin: auto;
    margin-top: 22px;
  }

  .modalS1_Des {
    border-radius: 20px;
    background: $c-p;
    text-align: center;
    padding-top: 100px;
    height: 100%;
    color: #fff;
    display: flex;
    flex-direction: column;

    h2 {
      font-weight: 800;
      font-size: 20px;
      line-height: 33px;
      color: #fff;
    }

    .image_ {
      margin-top: 88px;
    }
  }

  .step1 {
    .ant-input-group-addon {
      direction: ltr;
    }
  }

  .Previous {
    button {
      background: #fff;
      color: #9a9a9a;
      border: 1px solid #e0e0e0cc;
      margin-inline-end: 10px;
    }
  }

  .step3 {
    .coupon_sec {
      min-height: 150px;
      p {
        margin-bottom: 10px;
      }
      button {
        padding: 7px 10px !important;
        border-radius: 15px;
        height: 52px;
        font-size: 13px;
        width: 100%;

        &.active {
          background: #1fc0b0;
          color: #fff;
        }
      }

      .check_identifier_code_delete {
        color: #000;
        margin: 0px 11px;
        cursor: pointer;
        display: flex;
        align-items: center;
      }
    }
  }

  &.forgetPassword {
    .stepOneForm {
      .forgetPasswordBtn {
        margin: auto;
        margin-top: 30px;
        min-width: 250px;
      }

      .email {
        .ant-input-affix-wrapper {
          direction: rtl;

          input {
            direction: ltr;
          }

          &:lang(ar) {
            direction: ltr;

            input {
              direction: rtl;
            }
          }

          svg {
            color: $c-f-s;
          }
        }
      }

      .hintMessage {
        color: #999;
        text-align: center;
        font-weight: bold;
        font-size: 20px;
        margin-bottom: 100px;
      }
    }

    .forgetPasswordStep3 {
      .modalS1_header {
        margin-top: 30px;
      }

      button {
        margin: 20px auto 30px;
        min-width: 250px;
        background: $c-p !important;
        color: #fff;
      }
    }

    .ant-input-suffix {
      gap: 10px;
      padding: 3px !important;
    }
  }
}

.sectionLoading {
  width: 100%;
  min-height: 360px;
  padding: 10px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #ccc;
  cursor: pointer;
  transition: 0.2s linear;
  flex-direction: column;

  .loaderReg {
    position: relative;
    width: 48px;
    height: 48px;
    background: $c-p;
    transform: rotateX(65deg) rotate(45deg);
    // remove bellows command for perspective change
    //transform: perspective(200px) rotateX(65deg) rotate(45deg);
    color: rgba(31, 192, 176, 0.7);
    animation: layers1 1s linear infinite alternate;
    margin-bottom: 30px;
  }
  .loaderReg:after {
    content: "";
    position: absolute;
    inset: 0;
    background: rgba(31, 192, 176, 0.7);
    animation: layerTr 1s linear infinite alternate;
  }

  @keyframes layers1 {
    0% {
      box-shadow: 0px 0px 0 0px;
    }
    90%,
    100% {
      box-shadow: 20px 20px 0 -4px;
    }
  }
  @keyframes layerTr {
    0% {
      transform: translate(0, 0) scale(1);
    }
    100% {
      transform: translate(-25px, -25px) scale(1);
    }
  }
}
